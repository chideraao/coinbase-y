[{"/Users/Chidera/Desktop/react projects/coinbase-clone/src/index.js":"1","/Users/Chidera/Desktop/react projects/coinbase-clone/src/App.js":"2","/Users/Chidera/Desktop/react projects/coinbase-clone/src/reportWebVitals.js":"3","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/Header.jsx":"4","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/ChartTable.jsx":"5","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/Footer.jsx":"6","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/Banner.jsx":"7","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Home.jsx":"8","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Careers.jsx":"9","/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/ReviewsContext.jsx":"10","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/About.jsx":"11","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/AboutHeader.jsx":"12","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/AboutFooter.jsx":"13","/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/AboutContext.jsx":"14","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Earn.jsx":"15","/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/EarnContext.jsx":"16","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Press.jsx":"17","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Learn.jsx":"18","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Prices.jsx":"19","/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/GlobalContext.jsx":"20","/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/GlobalState.jsx":"21","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/CoinsSparkline.jsx":"22","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/PricesTable.jsx":"23","/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/PricesContext.jsx":"24"},{"size":473,"mtime":1608686899756,"results":"25","hashOfConfig":"26"},{"size":1594,"mtime":1610904079865,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1608080109210,"results":"28","hashOfConfig":"26"},{"size":955,"mtime":1609851474487,"results":"29","hashOfConfig":"26"},{"size":6220,"mtime":1610904259768,"results":"30","hashOfConfig":"26"},{"size":2356,"mtime":1610673642905,"results":"31","hashOfConfig":"26"},{"size":772,"mtime":1609439797649,"results":"32","hashOfConfig":"26"},{"size":9000,"mtime":1610641513465,"results":"33","hashOfConfig":"26"},{"size":9522,"mtime":1610844240843,"results":"34","hashOfConfig":"26"},{"size":5524,"mtime":1609691436300,"results":"35","hashOfConfig":"26"},{"size":5539,"mtime":1609981046788,"results":"36","hashOfConfig":"26"},{"size":941,"mtime":1609420615150,"results":"37","hashOfConfig":"26"},{"size":1668,"mtime":1610673631884,"results":"38","hashOfConfig":"26"},{"size":5023,"mtime":1609004660326,"results":"39","hashOfConfig":"26"},{"size":4058,"mtime":1609775706245,"results":"40","hashOfConfig":"26"},{"size":5492,"mtime":1609174226322,"results":"41","hashOfConfig":"26"},{"size":2168,"mtime":1609420731400,"results":"42","hashOfConfig":"26"},{"size":9972,"mtime":1609463203569,"results":"43","hashOfConfig":"26"},{"size":471,"mtime":1610905073403,"results":"44","hashOfConfig":"26"},{"size":1083,"mtime":1610588994439,"results":"45","hashOfConfig":"26"},{"size":603,"mtime":1609597638866,"results":"46","hashOfConfig":"26"},{"size":4139,"mtime":1610736023186,"results":"47","hashOfConfig":"26"},{"size":3791,"mtime":1610910075456,"results":"48","hashOfConfig":"26"},{"size":377,"mtime":1610904025131,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"3n9swc",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/Chidera/Desktop/react projects/coinbase-clone/src/index.js",[],["102","103"],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/App.js",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/reportWebVitals.js",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/Header.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/ChartTable.jsx",["104"],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/Footer.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/Banner.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Home.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Careers.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/ReviewsContext.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/About.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/AboutHeader.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/AboutFooter.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/AboutContext.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Earn.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/EarnContext.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Press.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Learn.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Pages/Prices.jsx",[],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/GlobalContext.jsx",["105"],"import React, { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { useReducer } from \"react\";\n\n// import { globalState } from \"./GlobalState\";\n\nexport const CryptosContext = createContext();\nexport const SparklineContext = createContext();\nexport const LanguageContext = createContext();\nexport const UserDataContext = createContext();\n\nexport const GlobalProvider = (props) => {\n\tconst [cryptos, setCryptos] = useState([]);\n\tconst [sparkline, setSparkline] = useState([]);\n\tconst [languages, setLanguages] = useState({});\n\tconst [userData, setUserData] = useState([]);\n\t// const [state, dispatch] = useReducer(globalState, { cryptos: \"\" });\n\n\treturn (\n\t\t<CryptosContext.Provider value={[cryptos, setCryptos]}>\n\t\t\t<UserDataContext.Provider value={[userData, setUserData]}>\n\t\t\t\t<SparklineContext.Provider value={[sparkline, setSparkline]}>\n\t\t\t\t\t<LanguageContext.Provider value={[languages, setLanguages]}>\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</LanguageContext.Provider>\n\t\t\t\t</SparklineContext.Provider>\n\t\t\t</UserDataContext.Provider>\n\t\t</CryptosContext.Provider>\n\t);\n};\n","/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/GlobalState.jsx",[],["106","107"],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/CoinsSparkline.jsx",["108","109","110","111","112"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { SparklineContext } from \"../State/GlobalContext\";\n\nexport function BTCChart() {\n\tconst [dataChart, setDataChart] = useState({});\n\tconst [sparkline, setSparkline] = useContext(SparklineContext);\n\t/**chart js styling options */\n\tconst chartOptions = {\n\t\t// maintainAspectRatio: false,\n\t\ttooltips: {\n\t\t\tenabled: false,\n\t\t},\n\t\telements: {\n\t\t\tpoint: { radius: 0 },\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: false,\n\t\t},\n\t\tscales: {\n\t\t\txAxes: [{ display: false }],\n\t\t\tyAxes: [{ display: false }],\n\t\t},\n\t};\n\n\t/**creating empty arrays for the chart data and pushing the props gotten from home component */\n\n\tuseEffect(() => {\n\t\tlet prices = [];\n\t\tlet timestamps = [];\n\t\tprices.push(sparkline[1].prices);\n\t\ttimestamps.push(sparkline[1].timestamps);\n\n\t\tsetDataChart({\n\t\t\tlabels: timestamps[0],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"prices\",\n\t\t\t\t\tdata: prices[0],\n\t\t\t\t\tborderColor: \"rgba(17, 51, 83, 0.3)\",\n\t\t\t\t\tfill: false,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"sparkline-container\">\n\t\t\t<Line data={dataChart} options={chartOptions} />\n\t\t</div>\n\t);\n}\n\nexport function ETHChart() {\n\tconst [dataChart, setDataChart] = useState({});\n\tconst [sparkline, setSparkline] = useContext(SparklineContext);\n\t/**chart js styling options */\n\tconst chartOptions = {\n\t\t// maintainAspectRatio: false,\n\t\ttooltips: {\n\t\t\tenabled: false,\n\t\t},\n\t\telements: {\n\t\t\tpoint: { radius: 0 },\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: false,\n\t\t},\n\t\tscales: {\n\t\t\txAxes: [{ display: false }],\n\t\t\tyAxes: [{ display: false }],\n\t\t},\n\t};\n\n\t/**creating empty arrays for the chart data and pushing the props gotten from home component */\n\n\tuseEffect(() => {\n\t\tlet prices = [];\n\t\tlet timestamps = [];\n\n\t\tif (sparkline !== {}) {\n\t\t\tprices.push(sparkline[2].prices);\n\t\t\ttimestamps.push(sparkline[2].timestamps);\n\n\t\t\tsetDataChart({\n\t\t\t\tlabels: timestamps[0],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"prices\",\n\t\t\t\t\t\tdata: prices[0],\n\t\t\t\t\t\tborderColor: \"rgba(17, 51, 83, 0.3)\",\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t}, [sparkline]);\n\n\treturn (\n\t\t<div className=\"sparkline-container\">\n\t\t\t<Line data={dataChart} options={chartOptions} />\n\t\t</div>\n\t);\n}\n\nexport function LTCChart() {\n\tconst [dataChart, setDataChart] = useState({});\n\tconst [sparkline, setSparkline] = useContext(SparklineContext);\n\t/**chart js styling options */\n\tconst chartOptions = {\n\t\ttooltips: {\n\t\t\tenabled: false,\n\t\t},\n\t\telements: {\n\t\t\tpoint: { radius: 0 },\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: false,\n\t\t},\n\t\tscales: {\n\t\t\txAxes: [{ display: false }],\n\t\t\tyAxes: [{ display: false }],\n\t\t},\n\t};\n\n\t/**creating empty arrays for the chart data and pushing the props gotten from home component */\n\n\tuseEffect(() => {\n\t\tlet prices = [];\n\t\tlet timestamps = [];\n\n\t\tprices.push(sparkline[3].prices);\n\t\ttimestamps.push(sparkline[3].timestamps);\n\n\t\tsetDataChart({\n\t\t\tlabels: timestamps[0],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"prices\",\n\t\t\t\t\tdata: prices[0],\n\t\t\t\t\tborderColor: \"rgba(17, 51, 83, 0.3)\",\n\t\t\t\t\tfill: false,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}, [sparkline]);\n\n\treturn (\n\t\t<div className=\"sparkline-container\">\n\t\t\t<Line data={dataChart} options={chartOptions} />\n\t\t</div>\n\t);\n}\n\nexport function BCHChart() {\n\tconst [dataChart, setDataChart] = useState({});\n\tconst [sparkline, setSparkline] = useContext(SparklineContext);\n\n\t/**chart js styling options */\n\tconst chartOptions = {\n\t\ttooltips: {\n\t\t\tenabled: false,\n\t\t},\n\t\telements: {\n\t\t\tpoint: { radius: 0 },\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: false,\n\t\t},\n\t\tscales: {\n\t\t\txAxes: [{ display: false }],\n\t\t\tyAxes: [{ display: false }],\n\t\t},\n\t};\n\n\t/**creating empty arrays for the chart data and pushing the props gotten from home component */\n\n\tuseEffect(() => {\n\t\tlet prices = [];\n\t\tlet timestamps = [];\n\n\t\tprices.push(sparkline[0].prices);\n\t\ttimestamps.push(sparkline[0].timestamps);\n\n\t\tsetDataChart({\n\t\t\tlabels: timestamps[0],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"prices\",\n\t\t\t\t\tdata: prices[0],\n\t\t\t\t\tborderColor: \"rgba(17, 51, 83, 0.3)\",\n\t\t\t\t\tfill: false,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}, [sparkline]);\n\n\treturn (\n\t\t<div className=\"sparkline-container\">\n\t\t\t<Line data={dataChart} options={chartOptions} />\n\t\t</div>\n\t);\n}\n","/Users/Chidera/Desktop/react projects/coinbase-clone/src/Components/PricesTable.jsx",["113"],"/Users/Chidera/Desktop/react projects/coinbase-clone/src/State/PricesContext.jsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":176,"column":10,"nodeType":"120","endLine":176,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"114","replacedBy":"125"},{"ruleId":"116","replacedBy":"126"},{"ruleId":"121","severity":1,"message":"127","line":7,"column":20,"nodeType":"123","messageId":"124","endLine":7,"endColumn":32},{"ruleId":"128","severity":1,"message":"129","line":45,"column":5,"nodeType":"130","endLine":45,"endColumn":7,"suggestions":"131"},{"ruleId":"121","severity":1,"message":"127","line":56,"column":20,"nodeType":"123","messageId":"124","endLine":56,"endColumn":32},{"ruleId":"121","severity":1,"message":"127","line":108,"column":20,"nodeType":"123","messageId":"124","endLine":108,"endColumn":32},{"ruleId":"121","severity":1,"message":"127","line":157,"column":20,"nodeType":"123","messageId":"124","endLine":157,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":93,"column":10,"nodeType":"120","endLine":93,"endColumn":22},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar",["132"],["133"],"'setSparkline' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sparkline'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [sparkline]",{"range":"137","text":"138"},[1032,1034],"[sparkline]"]